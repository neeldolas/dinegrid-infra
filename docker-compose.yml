version: '3.8'

services:
  food-ordering-postgres:
    image: postgres:16
    container_name: user_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: user_service_db
    ports:
      - "5434:5432"
    volumes:
      - food_ordering_pgdata:/var/lib/postgresql/data
    networks:
      - dinegrid_net

  menu-postgres:
    image: postgres:16
    container_name: menu_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: menu_service_db
    ports:
      - "5433:5432"
    volumes:
      - menu_pgdata:/var/lib/postgresql/data
    networks:
      - dinegrid_net

  mongo:
    image: mongo:7.0
    container_name: order_mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - dinegrid_net

  food-ordering-service:
    build: ./food-ordering-service
    container_name: food_ordering_service_app
    ports:
      - "8081:8081"
    depends_on:
      - food-ordering-postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user_postgres:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    networks:
      - dinegrid_net

  menu-service:
    build: ./menu-service
    container_name: menu_service_app
    ports:
      - "8082:8082"
      - "5005:5005"  # <-- debug port
    depends_on:
      - menu-postgres
      - kafka 
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://menu_postgres:5432/menu_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092  
    networks:
      - dinegrid_net

  order-service:
    build: ./order-service
    container_name: order_service_app
    ports:
      - "8083:8083"
      - "5006:5006"  # <-- debug port
    depends_on:
      - mongo
      - food-ordering-service
      - menu-service
      - kafka # Add dependency on kafka
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://order_mongo:27017/order_db
    networks:
      - dinegrid_net

  redis:
    image: redis:7
    container_name: dinegrid_redis
    ports:
      - "6379:6379"
    networks:
      - dinegrid_net

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - dinegrid_net  

  kafka:
   image: wurstmeister/kafka
   container_name: kafka
   ports:
    - "9092:9092"
   environment:
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092       # <- Tells Kafka to listen on all interfaces inside container
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092  # <- Tells services how to reach Kafka via docker network
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  
   depends_on:
    - zookeeper
   networks:
      - dinegrid_net

  

volumes:
  food_ordering_pgdata:
  menu_pgdata:
  mongo_data:

networks:
  dinegrid_net:
    driver: bridge
